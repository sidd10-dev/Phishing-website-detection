---
title: "Exploratory data analysis"
output: html_document
---

```{r}
library(tidyverse)
library(lattice)
library(reshape2)
library(pipeR)
library(rlist)
```

```{r}
df <- read.csv("../datasets/cleaned_dataset.csv")
df %>% head()
```
```{r}
df %>% nrow()
df %>% ncol()
```
11430 rows and 89 columns

Correlation heatmap

```{r}
corr.mat <- round(cor(df), 2)
melted.corr.mat <- melt(corr.mat)
melted.corr.mat %>% 
  ggplot(aes(x=Var1, y=Var2, fill=value)) +
  geom_tile()
```
```{r}
corr.mat[!lower.tri(corr.mat)] <- NA 
cols <- data.frame(corr.mat) %>%
              rownames_to_column() %>%
              gather(key="variable", value="correlation", -rowname) %>%
              filter(abs(correlation) > 0.2 & rowname == "status") %>% 
              arrange(correlation) %>% 
              pull(variable)
cols
```
These are the 22 columns that have very high correlation in sorted order with google_index giving the highest correlation value. We reduced 89 columns to 23 columns

```{r}
df.filtered <- df %>% 
  select(cols, status) %>% 
  mutate(status = as.factor(status))

df.filtered %>% head()
```

```{r}
df.filtered %>% 
  ggplot(aes(y=page_rank, x=status, fill=status)) +
  geom_boxplot()
```
We can see that phishing websites have few outliers

```{r}
df.filtered %>% 
  ggplot(aes(x=status, fill=as.factor(nb_www))) +
  geom_bar(position="dodge", colour = "black") +
  scale_fill_viridis_d()
```
In non phshing websites there is no more than 1 www and in phishing websites we have a lot of values with 0  www count

```{r}
df.filtered %>% 
  ggplot(aes(x=status, y=nb_hyperlinks, fill=status)) +
  geom_boxplot()
```
Lot of outliers in nb_hyperlinks

```{r}
df.filtered %>% 
  arrange(nb_hyperlinks) %>% 
  ggplot() +
  geom_histogram(aes(x=nb_hyperlinks), bins=100, fill="deepskyblue3", color="black")
```
Highly skewed data. Better to drop it or have to normalise it

```{r}
df.filtered %>% 
  arrange(nb_hyperlinks) %>% 
  ggplot() +
  geom_histogram(aes(x=domain_age), bins=100, fill="deepskyblue3", color="black")
```

```{r}
df.filtered %>% 
  ggplot(aes(x=status, y=domain_age, fill=status)) +
  geom_violin()
```

The column has to be normalised as it has pretty good distinctive features

```{r}
summary(df$ratio_intHyperlinks)
```
```{r}
df.filtered %>% 
  arrange(nb_hyperlinks) %>% 
  ggplot(aes(x=ratio_intHyperlinks, fill=status)) +
  geom_density(bins=100, color="black", alpha=0.3)
```
Better to use than nb_hyperlinks

```{r}
summary(df$nb_dots)
```
```{r}
df.filtered %>% 
  ggplot(aes(y=nb_dots)) +
  geom_boxplot(fill="deepskyblue3")
```

Lot of outliers

```{r}
df.filtered %>% 
  ggplot(aes(y=nb_dots, x=status, fill=status)) +
  geom_boxplot()
```

Most phishing websites have relatively higher number of dots than normal websites. This column can be useful in classification

```{r}
summary(df$tld_in_subdomain)
```
```{r}
df.filtered %>% 
  ggplot(aes(y=tld_in_subdomain)) +
  geom_boxplot(fill="deepskyblue3")
```
Lot of zeroes and 1s

```{r}
df.filtered %>% 
  mutate(tld = as.factor(tld_in_subdomain)) %>% 
  ggplot(aes(x=tld, fill=tld)) +
  geom_bar(colour="black") +
  scale_fill_viridis_d() +
  ggtitle("TLD_IN_SUBDOMAIN DISTRIBUTION")
```
Very little ones compared to 0

```{r}
df.filtered %>% 
  mutate(tld = as.factor(tld_in_subdomain)) %>% 
  ggplot(aes(x=tld, fill=status)) +
  geom_bar(colour="black", position="dodge") +
  scale_fill_viridis_d() +
  ggtitle("TLD_IN_SUBDOMAIN distribution with status hue")
```
Not much significance in predicting better to drop the column

```{r}
summary(df$prefix_suffix)
```

```{r}
df.filtered %>% 
  mutate(ps = as.factor(prefix_suffix)) %>% 
  ggplot(aes(x=ps, fill=ps)) +
  geom_bar(colour="black") +
  scale_fill_viridis_d() +
  ggtitle("Prefix_Suffix DISTRIBUTION")
```
```{r}
df.filtered %>% 
  mutate(ps = as.factor(prefix_suffix)) %>% 
  ggplot(aes(x=ps, fill=status)) +
  geom_bar(colour="black", position="dodge") +
  scale_fill_viridis_d() +
  ggtitle("Prefix_Suffix DISTRIBUTION with status hue")
```
Same as tld_in_domain not much useful

```{r}
summary(df$longest_word_path)
```
```{r}
df.filtered %>% 
  ggplot(aes(y=longest_word_path)) +
  geom_boxplot() +
  ggtitle("Longest word path distribution")
```
```{r}
df.filtered %>% 
  ggplot(aes(y=longest_word_path, x=as.factor(status), fill=status)) +
  geom_boxplot() +
  ggtitle("Longest word path distribution") 
```
Lot of outliers mean phishing website. Will be useful in predicting

```{r}
summary(df$empty_title)
```
```{r}
df.filtered %>% 
  mutate(et = as.factor(empty_title)) %>%
  ggplot(aes(x=et, fill=et)) +
  geom_bar(colour="black") +
  scale_fill_viridis_d() +
  ggtitle("Empty title distribution")
```
```{r}
df.filtered %>% 
  mutate(et = as.factor(empty_title)) %>%
  ggplot(aes(x=et, fill=status)) +
  geom_bar(colour="black", position="dodge") +
  scale_fill_viridis_d() +
  ggtitle("Empty title distribution with status hue")
```

